"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMutationResolvers = exports.getQueryResolvers = void 0;
const inflection_1 = require("inflection");
const graphql_type_json_1 = __importDefault(require("graphql-type-json"));
const all_1 = __importDefault(require("./Query/all"));
const meta_1 = __importDefault(require("./Query/meta"));
const single_1 = __importDefault(require("./Query/single"));
const create_1 = __importDefault(require("./Mutation/create"));
const update_1 = __importDefault(require("./Mutation/update"));
const remove_1 = __importDefault(require("./Mutation/remove"));
const index_1 = __importDefault(require("./Entity/index"));
const nameConverter_1 = require("../utils/nameConverter");
const DateType_1 = __importDefault(require("../introspection/DateType"));
const hasType_1 = __importDefault(require("../introspection/hasType"));
function getQueryResolvers(entityName, data) {
    let _key = inflection_1.pluralize(entityName);
    return ({
        [`all${_key}`]: all_1.default(data),
        [`_all${_key}Meta`]: meta_1.default(data),
        [entityName]: single_1.default(data),
    });
}
exports.getQueryResolvers = getQueryResolvers;
function getMutationResolvers(entityName, data) {
    return ({
        [`create${entityName}`]: create_1.default(data),
        [`update${entityName}`]: update_1.default(data),
        [`remove${entityName}`]: remove_1.default(data),
    });
}
exports.getMutationResolvers = getMutationResolvers;
function resolver(data) {
    return Object.assign({}, {
        Query: Object.keys(data).reduce((resolvers, key) => Object.assign({}, resolvers, getQueryResolvers(nameConverter_1.getTypeFromKey(key), data[key])), {}),
        Mutation: Object.keys(data).reduce((resolvers, key) => Object.assign({}, resolvers, getMutationResolvers(nameConverter_1.getTypeFromKey(key), data[key])), {}),
    }, Object.keys(data).reduce((resolvers, key) => Object.assign({}, resolvers, {
        [nameConverter_1.getTypeFromKey(key)]: index_1.default(key, data),
    }), {}), hasType_1.default('Date', data) ? { Date: DateType_1.default } : {}, // required because makeExecutableSchema strips resolvers from typeDefs
    hasType_1.default('JSON', data) ? { JSON: graphql_type_json_1.default } : {});
}
exports.default = resolver;
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSwyQ0FBdUM7QUFDdkMsMEVBQTRDO0FBRTVDLHNEQUE4QjtBQUM5Qix3REFBZ0M7QUFDaEMsNERBQW9DO0FBQ3BDLCtEQUF1QztBQUN2QywrREFBdUM7QUFDdkMsK0RBQXVDO0FBQ3ZDLDJEQUE0QztBQUM1QywwREFBd0Q7QUFDeEQseUVBQWlEO0FBQ2pELHVFQUErQztBQUkvQyxTQUFnQixpQkFBaUIsQ0FBd0QsVUFBa0IsRUFBRSxJQUFTO0lBRXJILElBQUksSUFBSSxHQUFHLHNCQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7SUFFakMsT0FBTyxDQUFDO1FBQ1AsQ0FBQyxNQUFNLElBQUksRUFBRSxDQUFDLEVBQUUsYUFBRyxDQUFDLElBQUksQ0FBQztRQUN6QixDQUFDLE9BQU8sSUFBSSxNQUFNLENBQUMsRUFBRSxjQUFJLENBQUMsSUFBSSxDQUFDO1FBQy9CLENBQUMsVUFBVSxDQUFDLEVBQUUsZ0JBQU0sQ0FBQyxJQUFJLENBQUM7S0FDMUIsQ0FBQyxDQUFBO0FBQ0gsQ0FBQztBQVRELDhDQVNDO0FBRUQsU0FBZ0Isb0JBQW9CLENBQXdELFVBQWtCLEVBQUUsSUFBUztJQUV4SCxPQUFPLENBQUM7UUFDUCxDQUFDLFNBQVMsVUFBVSxFQUFFLENBQUMsRUFBRSxnQkFBTSxDQUFDLElBQUksQ0FBQztRQUNyQyxDQUFDLFNBQVMsVUFBVSxFQUFFLENBQUMsRUFBRSxnQkFBTSxDQUFDLElBQUksQ0FBQztRQUNyQyxDQUFDLFNBQVMsVUFBVSxFQUFFLENBQUMsRUFBRSxnQkFBTSxDQUFDLElBQUksQ0FBQztLQUNyQyxDQUFDLENBQUM7QUFDSixDQUFDO0FBUEQsb0RBT0M7QUFFRCxTQUF3QixRQUFRLENBQXdELElBQXdCO0lBRS9HLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FDbkIsRUFBZ0IsRUFDaEI7UUFDQyxLQUFLLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQzlCLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQ2xCLE1BQU0sQ0FBQyxNQUFNLENBQ1osRUFBRSxFQUNGLFNBQVMsRUFDVCxpQkFBaUIsQ0FBQyw4QkFBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUNqRCxFQUNGLEVBQWdCLENBQ2hCO1FBQ0QsUUFBUSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUNqQyxDQUFDLFNBQVMsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUNsQixNQUFNLENBQUMsTUFBTSxDQUNaLEVBQUUsRUFDRixTQUFTLEVBQ1Qsb0JBQW9CLENBQUMsOEJBQWMsQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FDcEQsRUFDRixFQUFnQixDQUNoQjtLQUNELEVBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQ3ZCLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQ2xCLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLFNBQVMsRUFBRTtRQUM1QixDQUFDLDhCQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxlQUFjLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQztLQUNoRCxDQUFDLEVBQ0gsRUFBZ0IsQ0FDaEIsRUFDRCxpQkFBTyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsa0JBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFnQixFQUFFLHVFQUF1RTtJQUN0SSxpQkFBTyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsMkJBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFnQixDQUNoRSxDQUFDO0FBQ0gsQ0FBQztBQWxDRCwyQkFrQ0M7QUFBQSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGx1cmFsaXplIH0gZnJvbSAnaW5mbGVjdGlvbic7XG5pbXBvcnQgR3JhcGhRTEpTT04gZnJvbSAnZ3JhcGhxbC10eXBlLWpzb24nO1xuXG5pbXBvcnQgYWxsIGZyb20gJy4vUXVlcnkvYWxsJztcbmltcG9ydCBtZXRhIGZyb20gJy4vUXVlcnkvbWV0YSc7XG5pbXBvcnQgc2luZ2xlIGZyb20gJy4vUXVlcnkvc2luZ2xlJztcbmltcG9ydCBjcmVhdGUgZnJvbSAnLi9NdXRhdGlvbi9jcmVhdGUnO1xuaW1wb3J0IHVwZGF0ZSBmcm9tICcuL011dGF0aW9uL3VwZGF0ZSc7XG5pbXBvcnQgcmVtb3ZlIGZyb20gJy4vTXV0YXRpb24vcmVtb3ZlJztcbmltcG9ydCBlbnRpdHlSZXNvbHZlciBmcm9tICcuL0VudGl0eS9pbmRleCc7XG5pbXBvcnQgeyBnZXRUeXBlRnJvbUtleSB9IGZyb20gJy4uL3V0aWxzL25hbWVDb252ZXJ0ZXInO1xuaW1wb3J0IERhdGVUeXBlIGZyb20gJy4uL2ludHJvc3BlY3Rpb24vRGF0ZVR5cGUnO1xuaW1wb3J0IGhhc1R5cGUgZnJvbSAnLi4vaW50cm9zcGVjdGlvbi9oYXNUeXBlJztcbmltcG9ydCB7IElTb3VyY2VEYXRhUm9vdCwgSVNvdXJjZURhdGFSb3dCYXNlLCBJU291cmNlRGF0YVJvd0Jhc2VDb3JlIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHsgSVJlc29sdmVycyB9IGZyb20gJ2dyYXBocWwtdG9vbHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UXVlcnlSZXNvbHZlcnM8VCBleHRlbmRzIElTb3VyY2VEYXRhUm93QmFzZUNvcmUgPSBJU291cmNlRGF0YVJvd0Jhc2U+KGVudGl0eU5hbWU6IHN0cmluZywgZGF0YTogVFtdKVxue1xuXHRsZXQgX2tleSA9IHBsdXJhbGl6ZShlbnRpdHlOYW1lKTtcblxuXHRyZXR1cm4gKHtcblx0XHRbYGFsbCR7X2tleX1gXTogYWxsKGRhdGEpLFxuXHRcdFtgX2FsbCR7X2tleX1NZXRhYF06IG1ldGEoZGF0YSksXG5cdFx0W2VudGl0eU5hbWVdOiBzaW5nbGUoZGF0YSksXG5cdH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRNdXRhdGlvblJlc29sdmVyczxUIGV4dGVuZHMgSVNvdXJjZURhdGFSb3dCYXNlQ29yZSA9IElTb3VyY2VEYXRhUm93QmFzZT4oZW50aXR5TmFtZTogc3RyaW5nLCBkYXRhOiBUW10pXG57XG5cdHJldHVybiAoe1xuXHRcdFtgY3JlYXRlJHtlbnRpdHlOYW1lfWBdOiBjcmVhdGUoZGF0YSksXG5cdFx0W2B1cGRhdGUke2VudGl0eU5hbWV9YF06IHVwZGF0ZShkYXRhKSxcblx0XHRbYHJlbW92ZSR7ZW50aXR5TmFtZX1gXTogcmVtb3ZlKGRhdGEpLFxuXHR9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVzb2x2ZXI8VCBleHRlbmRzIElTb3VyY2VEYXRhUm93QmFzZUNvcmUgPSBJU291cmNlRGF0YVJvd0Jhc2U+KGRhdGE6IElTb3VyY2VEYXRhUm9vdDxUPik6IElSZXNvbHZlcnNcbntcblx0cmV0dXJuIE9iamVjdC5hc3NpZ24oXG5cdFx0e30gYXMgSVJlc29sdmVycyxcblx0XHR7XG5cdFx0XHRRdWVyeTogT2JqZWN0LmtleXMoZGF0YSkucmVkdWNlKFxuXHRcdFx0XHQocmVzb2x2ZXJzLCBrZXkpID0+XG5cdFx0XHRcdFx0T2JqZWN0LmFzc2lnbihcblx0XHRcdFx0XHRcdHt9LFxuXHRcdFx0XHRcdFx0cmVzb2x2ZXJzLFxuXHRcdFx0XHRcdFx0Z2V0UXVlcnlSZXNvbHZlcnMoZ2V0VHlwZUZyb21LZXkoa2V5KSwgZGF0YVtrZXldKSxcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHR7fSBhcyBJUmVzb2x2ZXJzLFxuXHRcdFx0KSxcblx0XHRcdE11dGF0aW9uOiBPYmplY3Qua2V5cyhkYXRhKS5yZWR1Y2UoXG5cdFx0XHRcdChyZXNvbHZlcnMsIGtleSkgPT5cblx0XHRcdFx0XHRPYmplY3QuYXNzaWduKFxuXHRcdFx0XHRcdFx0e30sXG5cdFx0XHRcdFx0XHRyZXNvbHZlcnMsXG5cdFx0XHRcdFx0XHRnZXRNdXRhdGlvblJlc29sdmVycyhnZXRUeXBlRnJvbUtleShrZXkpLCBkYXRhW2tleV0pLFxuXHRcdFx0XHRcdCksXG5cdFx0XHRcdHt9IGFzIElSZXNvbHZlcnMsXG5cdFx0XHQpLFxuXHRcdH0sXG5cdFx0T2JqZWN0LmtleXMoZGF0YSkucmVkdWNlKFxuXHRcdFx0KHJlc29sdmVycywga2V5KSA9PlxuXHRcdFx0XHRPYmplY3QuYXNzaWduKHt9LCByZXNvbHZlcnMsIHtcblx0XHRcdFx0XHRbZ2V0VHlwZUZyb21LZXkoa2V5KV06IGVudGl0eVJlc29sdmVyKGtleSwgZGF0YSksXG5cdFx0XHRcdH0pLFxuXHRcdFx0e30gYXMgSVJlc29sdmVycyxcblx0XHQpLFxuXHRcdGhhc1R5cGUoJ0RhdGUnLCBkYXRhKSA/IHsgRGF0ZTogRGF0ZVR5cGUgfSA6IHt9IGFzIElSZXNvbHZlcnMsIC8vIHJlcXVpcmVkIGJlY2F1c2UgbWFrZUV4ZWN1dGFibGVTY2hlbWEgc3RyaXBzIHJlc29sdmVycyBmcm9tIHR5cGVEZWZzXG5cdFx0aGFzVHlwZSgnSlNPTicsIGRhdGEpID8geyBKU09OOiBHcmFwaFFMSlNPTiB9IDoge30gYXMgSVJlc29sdmVycywgLy8gcmVxdWlyZWQgYmVjYXVzZSBtYWtlRXhlY3V0YWJsZVNjaGVtYSBzdHJpcHMgcmVzb2x2ZXJzIGZyb20gdHlwZURlZnNcblx0KTtcbn07XG4iXX0=